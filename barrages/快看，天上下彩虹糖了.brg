// Kouchya的弹幕练习(I)

const Utility = require('../utility')
const Barrage = require('../Barrage')

module.exports = new Barrage({
  reference: {
    base: {
      x: 0,
      y: 45,
      radius: 15,
      color: 'blue',
      mutate(time) {
        if (Utility.interval(3000, this.timeline, time)) {
          this.lastx = this.x
          if (this.x < 10) {
            this.nextx = 400
          } else if (this.x > 390) {
            this.nextx = 0
          } else {
            this.nextx = 200 + 200 * Utility.rpm()
          }
        } else if (time % 3000 > 2000) {
          this.x = Utility.smooth(this.lastx, this.nextx, (time % 3000 - 2000) / 1000)
        }
      }
    }
  },

  mounted() {
    this.setTimeout(2000, () => {
      this.setInterval(900, () => {
        const clr = Utility.rgb(Math.random() * 0.7 + 0.3, Math.random() * 0.7 + 0.3, Math.random() * 0.7 + 0.3)
        this.emitBullets(17, (index) => ({
          state: {
            radius: 18,
            color: clr,
            rho: 0,
            theta: Math.PI * (1 / 2 + 2 / 17 * index)
          },
          mutate(time) {
            this.rho += (1 + time / 1000 * 2) * (time - this.timeline) / 20
            this.polarLocate()
          }
        }))
      })
    })
  },

  mutate(time) {
    if (Utility.interval(Math.random() * 15 + 20, this.timeline, time) && time % 3000 > 2000) {
      this.emitBullets(1, Math.floor(Math.random() * 3 + 1), () => ({
        state: {
          radius: Math.random() * 4 + 6,
          color: Utility.rgb(Math.random() * 0.8 + 0.2, Math.random() * 0.8 + 0.2, Math.random() * 0.8 + 0.2),
          x: 0,
          raw_y: Math.random() * 100 * Utility.rpm(),
          gy: Math.random() * 160 + 80
        },
        mutate(time) {
          this.y = this.raw_y + (this.gy * time / 1000 * time / 1000) * (this.ref.self.y < this.ref.base.y ? -1 : 1)
        }
      }))
    }
  }
})
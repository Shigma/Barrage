const { Utility } = API

module.exports = {
  reference: {
    base: {
      state: {
        x: 240,
        y: 160,
        radius: 20,
        color: 'yellow'
      },
      mounted() {
        this.setInterval(2000, () => {
          this.lastx = this.x
          this.lasty = this.y
          if (this.x < 160) {
            this.nextx = this.x + Math.random() * 60 + 60
          } else if (this.x > 320) {
            this.nextx = this.x - Math.random() * 60 - 60
          } else {
            this.nextx = this.x + (Math.random() * 40 + 40) * Utility.rpm()
          }
          this.nexty = Math.random() * 40 + 140
        })
      },
      mutate(time) {
        if (time % 2000 > 1000) {
          this.x = Utility.smooth(this.lastx, this.nextx, (time % 2000 - 1000) / 1000)
          this.y = Utility.smooth(this.lasty, this.nexty, (time % 2000 - 1000) / 1000)
        }
      }
    }
  },

  mounted() {
    this.direction = Utility.rpm()
    this.setInterval(2000, () => this.direction *= -1)
    this.setInterval(160, 3, 2000, () => {
      this.emitBullets(1, 100, (index) => ({
        state: {
          rho: 0,
          theta:  1 / 2 + index / 50,
          radius: 6,
          color: 'white',
          style: 'border',
          bdColor: 'maroon',
          thickness: 4
        },
        mounted(parent) {
          this.direction = parent.direction
        },
        mutate(time, delta) {
          this.rho += (1 + time / 500) * delta / 20
          this.theta -= delta / 10000 * this.direction
          this.polarLocate()
        }
      }))
    })
  }
}
const Utility = require('../utility')
const Barrage = require('../Barrage')

module.exports = new Barrage({
  reference: {
    base: {
      x: 200,
      y: 160,
      radius: 20,
      color: 'yellow',
      face: Math.PI / 180 * 65,
      mutate(time) {
        this.x += 10 * Math.cos(this.face)
        this.y += 10 * Math.sin(this.face)
        if (this.x > 380 || this.x < 20){
          this.face = Math.PI - this.face
        }else if (this.y > 580 || this.y < 20){
          this.face = - this.face
        }
      }
    }
  },

  mutate(time) {
    const result = []
    if (Utility.interval(500, this.timeline, time)) {
      var clr = Utility.rgb(Math.random() * 0.7, Math.random() * 0.7, Math.random() * 0.7)
      x_bias = Math.random() * 80 * Utility.rpm()
      y_bias = Math.random() * 80 * Utility.rpm()
      var num = 23
      for (let i = 0; i < num; i++) {
        result.push({
          state: {
            radius: 5,
            color: clr,
            rho: 0,
            theta: Math.PI * (1 / 2 + 2 / num * i),
            createTime: time,
            v:5
          },
          mutate(time) {
            if (time - this.createTime < 2000){
              this.rho += this.v - (time - this.createTime) / 1000 * this.v
            }else if (time - this.createTime < 2500){
              this.rho -= (time - this.createTime) / 1000 * this.v / 4
            }else{
              this.rho += this.v
            }
            //this.rho += (1 + time / 1000 * 2) * (time - this.timeline) / 20
            this.polarLocate()
          }
        })
      }
    }
    return result
  }
})